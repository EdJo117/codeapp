menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Resources", icon = icon("database"), tabName = "rdb", startExpanded = TRUE,
menuSubItem("Internal", icon = icon("database"), tabName = "rdbi"),
menuSubItem("External", icon = icon("database"), tabName = "rdbe")
)
)
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("rdbi", DT::dataTableOutput("table1")),
tabItem("rdbe", "External tab content")
)
)
)
server <- function(input, output, session) {
output$table1 <- DT::renderDT(loaddata("ES"))
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Resources", icon = icon("database"), tabName = "rdb", startExpanded = TRUE,
menuSubItem("Internal", icon = icon("database"), tabName = "rdbi"),
menuSubItem("External", icon = icon("database"), tabName = "rdbe")
)
)
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("rdbi", DT::dataTableOutput("table1")),
tabItem("rdbe", DT::dataTableOutput("table1"))
)
)
)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Resources", icon = icon("database"), tabName = "rdb", startExpanded = TRUE,
menuSubItem("Internal", icon = icon("database"), tabName = "rdbi"),
menuSubItem("External", icon = icon("database"), tabName = "rdbe")
)
)
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("rdbi", DT::dataTableOutput("table1")),
tabItem("rdbe", DT::dataTableOutput("table1"))
)
)
)
server <- function(input, output, session) {
output$table1 <- DT::renderDT(loaddata("ES"))
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Resources", icon = icon("database"), tabName = "rdb", startExpanded = TRUE,
menuSubItem("Internal", icon = icon("database"), tabName = "rdbi"),
menuSubItem("External", icon = icon("database"), tabName = "rdbe")
)
)
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("rdbi", DT::dataTableOutput("table1")),
tabItem("rdbe", "DT::dataTableOutput(table1)")
)
)
)
server <- function(input, output, session) {
output$table1 <- DT::renderDT(loaddata("ES"))
}
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Resources", icon = icon("database"), tabName = "rdb", startExpanded = TRUE,
menuSubItem("Internal", icon = icon("database"), tabName = "rdbi"),
menuSubItem("External", icon = icon("database"), tabName = "rdbe")
)
)
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("rdbi", DT::dataTableOutput("table1")),
tabItem("rdbe", "DT::dataTableOutput(table1)")
)
)
)
server <- function(input, output, session) {
output$table1 <- DT::renderDT(loaddata("ES"))
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Resources", icon = icon("database"), tabName = "rdb", startExpanded = TRUE,
menuSubItem("Internal", icon = icon("database"), tabName = "rdbi"),
menuSubItem("External", icon = icon("database"), tabName = "rdbe"),
menuItem("Resources2", icon = icon("database"), tabName = "rdb2", startExpanded = TRUE,
menuSubItem("Internal2", icon = icon("database"), tabName = "rdbi2"),
menuSubItem("External2", icon = icon("database"), tabName = "rdbe2")
)
)
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("rdbi", DT::dataTableOutput("table1")),
tabItem("rdbe", "DT::dataTableOutput(table1)"),
tabItem("rdbi2", DT::dataTableOutput("table1")),
tabItem("rdbe2", "DT::dataTableOutput(table1)")
)
)
)
server <- function(input, output, session) {
output$table1 <- DT::renderDT(loaddata("ES"))
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Resources", icon = icon("database"), tabName = "rdb", startExpanded = TRUE,
menuSubItem("Internal", icon = icon("database"), tabName = "rdbi"),
menuSubItem("External", icon = icon("database"), tabName = "rdbe")
menuItem("Resources2", icon = icon("database"), tabName = "rdb2", startExpanded = TRUE,
menuSubItem("Internal2", icon = icon("database"), tabName = "rdbi2"),
menuSubItem("External2", icon = icon("database"), tabName = "rdbe2")
)
)
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("rdbi", DT::dataTableOutput("table1")),
tabItem("rdbe", "DT::dataTableOutput(table1)"),
tabItem("rdbi2", DT::dataTableOutput("table1")),
tabItem("rdbe2", "DT::dataTableOutput(table1)")
)
)
)
server <- function(input, output, session) {
output$table1 <- DT::renderDT(loaddata("ES"))
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Resources", icon = icon("database"), tabName = "rdb", startExpanded = TRUE,
menuSubItem("Internal", icon = icon("database"), tabName = "rdbi"),
menuSubItem("External", icon = icon("database"), tabName = "rdbe")
),
menuItem("Resources2", icon = icon("database"), tabName = "rdb2", startExpanded = TRUE,
menuSubItem("Internal2", icon = icon("database"), tabName = "rdbi2"),
menuSubItem("External2", icon = icon("database"), tabName = "rdbe2")
)
),
dashboardBody(
tabItems(
tabItem("dashboard", "Dashboard tab content"),
tabItem("rdbi", DT::dataTableOutput("table1")),
tabItem("rdbe", "DT::dataTableOutput(table1)"),
tabItem("rdbi2", DT::dataTableOutput("table1")),
tabItem("rdbe2", "DT::dataTableOutput(table1)")
)
)
)
server <- function(input, output, session) {
output$table1 <- DT::renderDT(loaddata("ES"))
}
shinyApp(ui, server)
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp()
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
library(shiny); runApp('C:/Users/edgar/Desktop/TestShiny.R')
library(shinydashboard)
runApp('C:/Users/edgar/Desktop/TestShiny.R')
library(lubridate)
library(zoo)
library(tidyverse)
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
loaddata("AL")
source(file="C:/Users/edgar/Desktop/CodeApp/metadata.R")
df = data.frame(name = NA, id = NA, perimetre = NA)
df[nrow(df)+1,] = c("Produit interieur brut","es.td.b1g_7ch_ind","ES")
df[nrow(df)+1,] = c("Consommation privee","es.td.p3_s145_7ch_ind","ES")
df[nrow(df)+1,] = c("Investissement","es.td.p51g_7ch_ind","ES")
df[nrow(df)+1,] = c("Consommation publique","es.td.p3_s13_7ch_ind","ES")
df[nrow(df)+1,] = c("Exportations","es.td.p6_7ch_ind","ES")
df[nrow(df)+1,] = c("Importations","es.td.p7_7ch_ind","ES")
df[nrow(df)+1,] = c("Demande interieure hors stocks","es.di.contrib","ES")
df[nrow(df)+1,] = c("Variation de stocks","es.stocks.contrib","ES")
df[nrow(df)+1,] = c("Commerce exterieur","es.comext.contrib","ES")
df[nrow(df)+1,] = c("Investissement en construction","es.td.p51g_n11kg_7ch_ind","ES")
df[nrow(df)+1,] = c("Investissement en equipement","es.td.p51g_n11mg_7ch_ind","ES")
df[nrow(df)+1,] = c("RDB","es.td.b6g_s145_3","ES")
df[nrow(df)+1,] = c("Emploi salarie","es.td.emploi_sal_3","ES")
df[nrow(df)+1,] = c("Salaires","es.smpt","ES")
df[nrow(df)+1,] = c("Salaires reels","es.smpt_7ch","ES")
df[nrow(df)+1,] = c("Taux d'activite","es.tx_act","ES")
df[nrow(df)+1,] = c("Population active","es.td.pop_act_3","ES")
df[nrow(df)+1,] = c("Emploi total","es.td.emploi_3","ES")
df[nrow(df)+1,] = c("Taux de chomage","es.td.tx_chomage_pe","ES")
df[nrow(df)+1,] = c("Inflation energetique","es.td.ipch_nrj","ES")
df[nrow(df)+1,] = c("Inflation alimentaire","es.td.ipch_alim","ES")
df[nrow(df)+1,] = c("Inflation sous-jacente","es.td.ipch_sj","ES")
df[nrow(df)+1,] = c("Inflation totale","es.td.ipch_tot","ES")
df[nrow(df)+1,] = c("Deflateur de la consommation","es.td.p3_s145_9","ES")
df[nrow(df)+1,] = c("Taux d'epargne","es.tx_ep","ES")
df[nrow(df)+1,] = c("Pouvoir d'achat","es.td.b6g_s145_7","ES")
df[nrow(df)+1,] = c("Produit interieur brut","al.pib","AL")
df[nrow(df)+1,] = c("Consommation privee","al.conso","AL")
df[nrow(df)+1,] = c("Investissement","al.fbcf","AL")
df[nrow(df)+1,] = c("Consommation publique","al.consopub","AL")
df[nrow(df)+1,] = c("Exportations","al.export","AL")
df[nrow(df)+1,] = c("Importations","al.import","AL")
df[nrow(df)+1,] = c("Demande interieure hors stocks","al.di.contrib","al.di.contrib.an","AL")
df[nrow(df)+1,] = c("Variation de stocks","al.stocks.contrib","al.stocks.contrib.an","AL")
df[nrow(df)+1,] = c("Commerce exterieur","al.comext.contrib","al.comext.contrib.an","AL")
df[nrow(df)+1,] = c("Investissement en construction","al.fbcfcons","AL")
df[nrow(df)+1,] = c("Investissement en equipement","al.fbcfeq","AL")
df[nrow(df)+1,] = c("Investissement autre","al.fbcfautre","AL")
df[nrow(df)+1,] = c("RDB","al.rdb_insee","AL")
df[nrow(df)+1,] = c("Emploi salarie","al.emploi_sal","AL")
df[nrow(df)+1,] = c("Salaires","al.smpt","AL")
df[nrow(df)+1,] = c("Taux d'activite","al.taux_activite","AL")
df[nrow(df)+1,] = c("Population active","al.popact","AL")
df[nrow(df)+1,] = c("Emploi total","al.emploi_total","AL")
df[nrow(df)+1,] = c("Taux de chomage","al.tx_u_cnt","AL")
df[nrow(df)+1,] = c("Inflation energetique","al.ipch_energie_t","AL")
df[nrow(df)+1,] = c("Inflation alimentaire","al.ipch_alim_t","AL")
df[nrow(df)+1,] = c("Inflation sous-jacente","al.ipch_sj_t","AL")
df[nrow(df)+1,] = c("Inflation totale","al.ipch_t","AL")
df[nrow(df)+1,] = c("Deflateur de la consommation","al.def_conso","AL")
df[nrow(df)+1,] = c("Pouvoir d'achat","al.pvr_achat","AL")
df[nrow(df)+1,] = c("Taux d'epargne","al.tx_s_maison_b","AL")
metadata = df
loaddata("AL")
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
rhandsondata <- function (data) { data = data %>%
group_by(name) %>%
mutate(Growth = 100*(value - dplyr::lag(value))/dplyr::lag(value))
data = data %>%
select(name, time, Growth) %>%
distinct() %>%
pivot_wider(names_from = time, values_from = Growth)
# data[1,-1]
# c(100,-100)
data_chart = data[1,-1]
data_chart = data_chart[!is.na(data_chart)]
data2$chart = c(sapply(1:26,
function(x) jsonlite::toJSON(list(values= as.numeric(data_chart),
options = list(type = "bar", width = 200,
height = 50)))))
return(data2)
# rhandsontable(data2, rowHeaders = NULL, width = 500, height = 300) %>%
#   hot_col("chart", renderer = htmlwidgets::JS("renderSparkline"))
}
runApp('C:/Users/edgar/Desktop/TestShiny.R')
library(rhandsontable)
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
rhandsondata <- function (data,data2) { data = data %>%
group_by(name) %>%
mutate(Growth = 100*(value - dplyr::lag(value))/dplyr::lag(value))
data = data %>%
select(name, time, Growth) %>%
distinct() %>%
pivot_wider(names_from = time, values_from = Growth)
# data[1,-1]
# c(100,-100)
data_chart = data[1,-1]
data_chart = data_chart[!is.na(data_chart)]
data2$chart = c(sapply(1:26,
function(x) jsonlite::toJSON(list(values= as.numeric(data_chart),
options = list(type = "bar", width = 200,
height = 50)))))
return(data2)
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
library(shiny); runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
library(lubridate)
library(zoo)
library(tidyverse)
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('AppTest.R')
length(df[,1])
runApp('AppTest.R')
rhandsondata <- function (data,data2) { data = data %>%
group_by(name) %>%
mutate(Growth = 100*(value - dplyr::lag(value))/dplyr::lag(value))
data = data %>%
select(name, time, Growth) %>%
distinct() %>%
pivot_wider(names_from = time, values_from = Growth)
# data[1,-1]
# c(100,-100)
data_chart = data[1,-1]
data_chart = data_chart[!is.na(data_chart)]
data2$chart = c(sapply(1:length(data2[,1]),
function(x) jsonlite::toJSON(list(values= as.numeric(data_chart),
options = list(type = "bar", width = 200,
height = 50)))))
return(data2)
# rhandsontable(data2, rowHeaders = NULL, width = 500, height = 300) %>%
#   hot_col("chart", renderer = htmlwidgets::JS("renderSparkline"))
}
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('AppTest.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
spark_data <- data.frame(
id = c('spark1', 'spark2'),
spark = c(
spk_chr(values = 1:3, elementId = 'spark1'),
spk_chr(values = 3:1, elementId = 'spark2')
)
)
install.packages("sparkline")
library(sparkline)
spark_data <- data.frame(
id = c('spark1', 'spark2'),
spark = c(
spk_chr(values = 1:3, elementId = 'spark1'),
spk_chr(values = 3:1, elementId = 'spark2')
)
)
View(spark_data)
tbl <- datatable(spark_data, escape = FALSE)
spk_add_deps(tbl)
library(DT)
tbl <- datatable(spark_data, escape = FALSE)
spk_add_deps(tbl)
spark_data1<- data.frame(id = c('spark1', 'spark2'),
spark = c("1,2,3", "3,2,1"))
ui <- fluidPage(
sparklineOutput("test_spark"),
DT::dataTableOutput("tbl")
)
server <- function(input, output) {
line_string <- "type: 'line', lineColor: 'black', fillColor: '#ccc', highlightLineColor: 'orange', highlightSpotColor: 'orange'"
cd <- list(list(targets = 1, render = JS("function(data, type, full){ return '<span class=sparkSamples>' + data + '</span>' }")))
cb = JS(paste0("function (oSettings, json) {\n  $('.sparkSamples:not(:has(canvas))').sparkline('html', { ",
line_string, " });\n}"), collapse = "")
output$tbl <- DT::renderDataTable({
dt <-  DT::datatable(as.data.frame(spark_data1),  rownames = FALSE, options = list(columnDefs = cd,fnDrawCallback = cb))
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
DT::dataTableOutput("tbl")
)
shinyApp(ui = ui, server = server)
ui <- fluidPage(
sparklineOutput("test_spark"),
DT::dataTableOutput("tbl")
)
shinyApp(ui = ui, server = server)
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
install.packages("htmlwidgets")
library(htmlwidgets)
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
length(metadata[,1])
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
class(length(metadata[,1]))
View(metadata)
df = data.frame(name = NA, id = NA, perimetre = NA)
df[nrow(df)+1,] = c("Produit interieur brut","es.td.b1g_7ch_ind","ES")
df[nrow(df)+1,] = c("Consommation privee","es.td.p3_s145_7ch_ind","ES")
df[nrow(df)+1,] = c("Investissement","es.td.p51g_7ch_ind","ES")
df[nrow(df)+1,] = c("Consommation publique","es.td.p3_s13_7ch_ind","ES")
df[nrow(df)+1,] = c("Exportations","es.td.p6_7ch_ind","ES")
df[nrow(df)+1,] = c("Importations","es.td.p7_7ch_ind","ES")
df[nrow(df)+1,] = c("Demande interieure hors stocks","es.di.contrib","ES")
df[nrow(df)+1,] = c("Variation de stocks","es.stocks.contrib","ES")
df[nrow(df)+1,] = c("Commerce exterieur","es.comext.contrib","ES")
df[nrow(df)+1,] = c("Investissement en construction","es.td.p51g_n11kg_7ch_ind","ES")
df[nrow(df)+1,] = c("Investissement en equipement","es.td.p51g_n11mg_7ch_ind","ES")
df[nrow(df)+1,] = c("RDB","es.td.b6g_s145_3","ES")
df[nrow(df)+1,] = c("Emploi salarie","es.td.emploi_sal_3","ES")
df[nrow(df)+1,] = c("Salaires","es.smpt","ES")
df[nrow(df)+1,] = c("Salaires reels","es.smpt_7ch","ES")
df[nrow(df)+1,] = c("Taux d'activite","es.tx_act","ES")
df[nrow(df)+1,] = c("Population active","es.td.pop_act_3","ES")
df[nrow(df)+1,] = c("Emploi total","es.td.emploi_3","ES")
df[nrow(df)+1,] = c("Taux de chomage","es.td.tx_chomage_pe","ES")
df[nrow(df)+1,] = c("Inflation energetique","es.td.ipch_nrj","ES")
df[nrow(df)+1,] = c("Inflation alimentaire","es.td.ipch_alim","ES")
df[nrow(df)+1,] = c("Inflation sous-jacente","es.td.ipch_sj","ES")
df[nrow(df)+1,] = c("Inflation totale","es.td.ipch_tot","ES")
df[nrow(df)+1,] = c("Deflateur de la consommation","es.td.p3_s145_9","ES")
df[nrow(df)+1,] = c("Taux d'epargne","es.tx_ep","ES")
df[nrow(df)+1,] = c("Pouvoir d'achat","es.td.b6g_s145_7","ES")
df[nrow(df)+1,] = c("Produit interieur brut","al.pib","AL")
df[nrow(df)+1,] = c("Consommation privee","al.conso","AL")
df[nrow(df)+1,] = c("Investissement","al.fbcf","AL")
df[nrow(df)+1,] = c("Consommation publique","al.consopub","AL")
df[nrow(df)+1,] = c("Exportations","al.export","AL")
df[nrow(df)+1,] = c("Importations","al.import","AL")
df[nrow(df)+1,] = c("Demande interieure hors stocks","al.di.contrib","AL")
df[nrow(df)+1,] = c("Variation de stocks","al.stocks.contrib","AL")
df[nrow(df)+1,] = c("Commerce exterieur","al.comext.contrib","AL")
df[nrow(df)+1,] = c("Investissement en construction","al.fbcfcons","AL")
df[nrow(df)+1,] = c("Investissement en equipement","al.fbcfeq","AL")
df[nrow(df)+1,] = c("Investissement autre","al.fbcfautre","AL")
df[nrow(df)+1,] = c("RDB","al.rdb_insee","AL")
df[nrow(df)+1,] = c("Emploi salarie","al.emploi_sal","AL")
df[nrow(df)+1,] = c("Salaires","al.smpt","AL")
df[nrow(df)+1,] = c("Taux d'activite","al.taux_activite","AL")
df[nrow(df)+1,] = c("Population active","al.popact","AL")
df[nrow(df)+1,] = c("Emploi total","al.emploi_total","AL")
df[nrow(df)+1,] = c("Taux de chomage","al.tx_u_cnt","AL")
df[nrow(df)+1,] = c("Inflation energetique","al.ipch_energie_t","AL")
df[nrow(df)+1,] = c("Inflation alimentaire","al.ipch_alim_t","AL")
df[nrow(df)+1,] = c("Inflation sous-jacente","al.ipch_sj_t","AL")
df[nrow(df)+1,] = c("Inflation totale","al.ipch_t","AL")
df[nrow(df)+1,] = c("Deflateur de la consommation","al.def_conso","AL")
df[nrow(df)+1,] = c("Pouvoir d'achat","al.pvr_achat","AL")
df[nrow(df)+1,] = c("Taux d'epargne","al.tx_s_maison_b","AL")
metadata = df
View(metadata)
dataEXP <- loaddata("ES")
dataEXP2 <- dataEXP %>%
distinct() %>%
pivot_wider(., names_from = time, values_from = value)
View(dataEXP2)
length(dataEXP2[,1])
dataEXP2[,1]
length(as.data.frame(dataEXP2[,1]))
nrow(dataEXP2)
runApp('AppTest.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
runApp('AppTest.R')
runApp('C:/Users/edgar/Desktop/TestShiny.R')
library(shiny); runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
library(shiny); runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
library(shiny); runApp('AppTest.R')
library(shiny); runApp('AppTest.R')
library(shiny); runApp('AppTest.R')
signif(0.123456, digits = 3)
signif(0.123456, digits = 1)
signif(0.123456, digits = 7)
signif(0.123456, digits = 4)
signif(0.12499, digits = 4)
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
library(shiny); runApp('AppTest.R')
