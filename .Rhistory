)
)
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
data <- metadata
data
}))
}
shinyApp(ui = ui, server = server)
source(file="C:/Users/edgar/Desktop/TestApp.R")
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
if (input$var != "AL") {
data <- metadata
}
else {
data <- dar
}
data
}))
}
shinyApp(ui = ui, server = server)
source(file="C:/Users/edgar/Desktop/TestApp.R")
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
if (input$var != "AL") {
data <- metadata
}
else {
data <- dar
}
data
}))
}
shinyApp(ui = ui, server = server)
dar = data.frame(x = 0, y = 1, z = 5)
dar[nrow(dar)+1,] = c(1,2,4)
dar[nrow(dar)+1,] = c(1,2,4)
dar[nrow(dar)+1,] = c(1,2,4)
dar[nrow(dar)+1,] = c(1,2,4)
dar[nrow(dar)+1,] = c(1,2,4)
dar[nrow(dar)+1,] = c(1,2,4)
source(file="C:/Users/edgar/Desktop/TestApp.R")
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
if (input$var != "AL") {
data <- metadata
}
else {
data <- dar
}
data
}))
}
# Run the app ----
shinyApp(ui = ui, server = server)
source(file="C:/Users/edgar/Desktop/TestApp.R")
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
if (input$var != "AL") {
data <- metadata
}
else {
data <- dar
}
data
}))
}
shinyApp(ui = ui, server = server)
dar = data.frame(x = 0, y = 1, z = 5)
dar[nrow(dar)+1,] = c(1,2,4)
testableau <- function(perim){dar[nrow(dar)+1,] = c(perim,perim,perim)}
source(file="C:/Users/edgar/Desktop/TestApp.R")
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
data <- testableau(input$var)
data
}))
}
shinyApp(ui = ui, server = server)
source(file="C:/Users/edgar/Desktop/TestApp.R")
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
testableau(input$var)
data <- dar
}))
}
shinyApp(ui = ui, server = server)
testableau <- function(perim){data.frame(x = perim, y = perim, z = perim)}
source(file="C:/Users/edgar/Desktop/TestApp.R")
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
data <- testableau(input$var)
data
}))
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", strong(input$var))
})
output$table <- DT::renderDataTable(DT::datatable({
data <- testableau(input$var)
data
}))
}
shinyApp(ui = ui, server = server)
source(file="C:/Users/edgar/Desktop/TestApp.R")
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", span(input$var, style = "color:blue"))
})
output$table <- DT::renderDataTable(DT::datatable({
data <- testableau(input$var)
data
}))
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
h6(paste("Vous avez selectionné", input$var))
})
output$table <- DT::renderDataTable(DT::datatable({
data <- testableau(input$var)
data
}))
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = list('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = "AL"),
downloadButton("downloadData", "Download")
),
mainPanel(
textOutput("selected_var")
)
),
DT::dataTableOutput("table")
)
server <- function(input, output) {
output$selected_var <- renderText({
paste("Vous avez selectionné", input$var)
})
output$table <- DT::renderDataTable(DT::datatable({
data <- testableau(input$var)
data
}))
output$downloadData <- downloadHandler(
filename = function() {
paste('data_',  input$var, Sys.Date(), '.csv', sep='')
},
content = function(con) {
write.csv(data, con)
}
)
}
shinyApp(ui = ui, server = server)
runApp()
runApp('AppTest.R')
runApp('AppTest.R')
runApp('AppTest.R')
runApp()
runApp('test_app.R')
runApp('test_app.R')
runApp('test_app.R')
runApp('test_app.R')
runApp('test_app.R')
runApp('test_app.R')
load("C:/Users/edgar/Desktop/chiffres/data/syntheseGFOU/sortieGFRdata2020-03-06 18h.Rdata")
View(table_noteRch)
View(table_noteRch)
data <- readRDS(file = "C:/Users/edgar/Desktop/chiffres/data/syntheseGFOU/sortieGFRdata2020-03-06 18h.Rdata")
data["pib_7ch"]
data <- load("C:/Users/edgar/Desktop/chiffres/data/syntheseGFOU/sortieGFRdata2020-03-06 18h.Rdata")
data["pib_7ch"]
data <- readRDS(file = "C:/Users/edgar/Desktop/chiffres/data/syntheseGFOU/sortieGFRdata2020-03-06 18h.Rdata")
data["pib_7ch"]
data <- get(load("C:/Users/edgar/Desktop/chiffres/data/syntheseGFOU/sortieGFRdata2020-03-06 18h.Rdata"))
data["pib_7ch"]
View(data)
data[pib_7ch]
data$pib_7ch
data$"pib_7ch"
data[1,]
View(table_noteRch)
class(rnorm(10))
rnorm(10)
View(data)
class(data[1,])
runApp('AppTest.R')
install.packages("rhandsontable")
library(rhandsontable)
runApp('AppTest.R')
install.packages("rhandsontable")
runApp('AppTest.R')
install.packages("rhandsontable")
library(rhandsontable)
library(shiny); runApp('AppTest.R')
runApp('AppTest.R')
install.packages("rhandsontable")
as.data.frame(data)
data = as.data.frame(data)
runApp('AppTest.R')
install.packages("rhandsontable")
data[1,]
class(data[1,])
as.numeric(data[1,])
runApp('AppTest.R')
install.packages("rhandsontable")
runApp('AppTest.R')
install.packages("rhandsontable")
data$chart = c(sapply(1:299,
function(x) jsonlite::toJSON(list(values=as.numeric(data[1,]), options = list(type = "line")))))
data
View(data)
runApp('AppTest.R')
install.packages("rhandsontable")
runApp('AppTest.R')
install.packages("rhandsontable")
runApp('AppTest.R')
install.packages("rhandsontable")
t(data)
y = t(data)
View(y)
z = t(data)
View(z)
z = z[-29,]
z$date = seq.Date(from = as.Date('2014-01-01'), to = as.Date('2020-10-01'), by = 'quarter')
seq.Date(from = as.Date('2014-01-01'), to = as.Date('2020-10-01'), by = 'quarter')
z = t(data)
z = z[-29,]
z$time = seq.Date(from = as.Date('2014-01-01'), to = as.Date('2020-10-01'), by = 'quarter')
z = t(data)
z = z[-29,]
z$test = c(1:29)
z = t(data)
z = z[-29,]
z["time"] = seq.Date(from = as.Date('2014-01-01'), to = as.Date('2020-10-01'), by = 'quarter')
z = t(data)
z = z[-29,]
z["time"] <- seq.Date(from = as.Date('2014-01-01'), to = as.Date('2020-10-01'), by = 'quarter')
z = t(data)
z = z[-29,]
z["time"] <- as.vector(seq.Date(from = as.Date('2014-01-01'), to = as.Date('2020-10-01'), by = 'quarter'))
z = t(data)
z = z[-29,]
z = t(data)
z = as.data.frame(z[-29,])
z[["time"]] <- as.list(seq.Date(from = as.Date('2014-01-01'), to = as.Date('2020-10-01'), by = 'quarter'))
View(z)
z = t(data)
z = as.data.frame(z[-29,])
z[["time"]] <- seq.Date(from = as.Date('2014-01-01'), to = as.Date('2020-10-01'), by = 'quarter')
hchart(z, "line", hcaes(x = date, y = pib_7ch))
install.packages("highcharter")
library(highcharter)
hchart(z, "line", hcaes(x = date, y = pib_7ch))
hchart(z, "line", hcaes(x = time, y = pib_7ch))
hchart(z, "line", hcaes(x = time, y = pib_7ch))
hchart(z$pib_7ch)
hchart(z, "line", hcaes(x = time, y = pib_7ch))
z[["test"]] <- 1
hchart(z, "line", hcaes(x = time, y = pib_7ch, group = test))
