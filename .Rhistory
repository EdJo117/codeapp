paste("tabl_","ES")
paste("tabl_","ES", collapse)
paste("tabl_","ES", collapse = NULL)
paste0("tabl_","ES")
install.packages("DT")
metadata = df
View(metadata)
df = data.frame(name = NA, id = NA, pays = NA)
df[nrow(df)+1,] = c("Produit interieur brut","es.td.b1g_7ch_ind","ES")
df[nrow(df)+1,] = c("Consommation privee","es.td.p3_s145_7ch_ind","ES")
df[nrow(df)+1,] = c("Investissement","es.td.p51g_7ch_ind","ES")
df[nrow(df)+1,] = c("Consommation publique","es.td.p3_s13_7ch_ind","ES")
df[nrow(df)+1,] = c("Exportations","es.td.p6_7ch_ind","ES")
df[nrow(df)+1,] = c("Importations","es.td.p7_7ch_ind","ES")
df[nrow(df)+1,] = c("Demande interieure hors stocks","es.di.contrib","ES")
df[nrow(df)+1,] = c("Variation de stocks","es.stocks.contrib","ES")
df[nrow(df)+1,] = c("Commerce exterieur","es.comext.contrib","ES")
df[nrow(df)+1,] = c("Investissement en construction","es.td.p51g_n11kg_7ch_ind","ES")
df[nrow(df)+1,] = c("Investissement en equipement","es.td.p51g_n11mg_7ch_ind","ES")
df[nrow(df)+1,] = c("RDB","es.td.b6g_s145_3","ES")
df[nrow(df)+1,] = c("Emploi salarie","es.td.emploi_sal_3","ES")
df[nrow(df)+1,] = c("Salaires","es.smpt","ES")
df[nrow(df)+1,] = c("Salaires reels","es.smpt_7ch","ES")
df[nrow(df)+1,] = c("Taux d'activite","es.tx_act","ES")
df[nrow(df)+1,] = c("Population active","es.td.pop_act_3","ES")
df[nrow(df)+1,] = c("Emploi total","es.td.emploi_3","ES")
df[nrow(df)+1,] = c("Taux de chomage","es.td.tx_chomage_pe","ES")
df[nrow(df)+1,] = c("Inflation energetique","es.td.ipch_nrj","ES")
df[nrow(df)+1,] = c("Inflation alimentaire","es.td.ipch_alim","ES")
df[nrow(df)+1,] = c("Inflation sous-jacente","es.td.ipch_sj","ES")
df[nrow(df)+1,] = c("Inflation totale","es.td.ipch_tot","ES")
df[nrow(df)+1,] = c("Deflateur de la consommation","es.td.p3_s145_9","ES")
df[nrow(df)+1,] = c("Taux d'epargne","es.tx_ep","ES")
df[nrow(df)+1,] = c("Pouvoir d'achat","es.td.b6g_s145_7","ES")
metadata = df
metadata["pays"]
test<-c("a","a","ab","bb","b")
doublonstest<-which(duplicated(test))
test2<-test[-doublonstest]
test2
doublonstest<-which(duplicated(metadata["pays"]))
test2<-metadata["pays"][-doublonstest]
test2
class(metadata["pays"])
metadata["pays"].list
split(metadata["pays"], seq(nrow(metadata["pays"])))
L <- split(metadata["pays"], seq(nrow(metadata["pays"])))
doublonstest<-which(duplicated(L))
test2<-L[-doublonstest]
test2
as.list(metadata["pays"])
L <- as.list(metadata["pays"])
doublonstest<-which(duplicated(L))
test2<-L[-doublonstest]
test2
L[-1]
length(L)
L <- list(metadata["pays"])
length(L)
test <- transpose(metadata)
test <- purrr::transpose(metadata)
test["pays"]
View(test)
delete test
test = ()
test = c(0)
metadata["pays"]::distinct()
metadata["pays"] %>% dplyr::distinct()
metadata["pays"] %>% distinct()
test = metadata["pays"] %>% distinct()
library(tidyverse)
test = metadata["pays"] %>% distinct()
test[-1,]
class(test)
df[nrow(df)+1,] = c("Produit interieur brut","es.td.b1g_7ch_ind","AL")
df[nrow(df)+1,] = c("Consommation privee","es.td.p3_s145_7ch_ind","AL")
metadata = df
test = metadata["pays"] %>% distinct()
test[-1,]
as.list(test)
test = test[-1,]
class(test)
metadata <- metadata[-1,]
test = metadata["pays"] %>% distinct()
shiny::runApp()
library(shiny)
runApp()
library(shinydashboard)
sudo su - -c "R -e \"install.packages('shinydashboard', repos='http://cran.rstudio.com/')\""
install.packages('shinydashboard', repos='http://cran.rstudio.com/')
library(shinydashboard)
runApp()
install.packages('shinydashboardPlus', repos='http://cran.rstudio.com/')
library(shinydashboardPlus)
runApp()
install.packages('shinyWidgets')
library(shinyWidgets)
runApp()
install.packages('shinyjs')
library(shinyjs)
runApp()
install.packages('plotly')
library(plotly)
runApp()
install.packages('ggthemes')
library(ggthemes)
runApp()
library(shiny)
install.packages('eurostat')
library(eurostat)
runApp()
runApp()
install.packages('rsdmx')
library(rsdmx)
runApp()
runApp()
source(file="C:/Users/edgar/Desktop/CodeApp/metadata.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(shinydashboard)
library(shinydashboardPlus)
library(shinyWidgets)
library(shinyjs)
library(plotly)
library(ggthemes)
library(eurostat)
library(rsdmx)
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = c('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = 'AL'),
mainPanel(textOutput("selected_var"))
)
))
# Define server logic ----
server <- function(input, output) {
}
# Run the app ----
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = c('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = 'AL'),
mainPanel(textOutput("selected_var"))
)
))
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = c('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = 'AL'),
mainPanel(textOutput("var"))
)
))
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = c('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = 'AL'),
mainPanel("var")
)
))
ui <- fluidPage(
titlePanel("Tableau de la conjoncture"),
sidebarLayout(
sidebarPanel(
helpText("Choisir un tableau selon le périmètre voulu"),
selectInput("var",
label = "Choisir un périmètre",
choices = c('AL','BENL','CN','COMEXT','CONSO',
'DM','EM','EMPL','ES','FI','FITAUX',
'INV','IT','JP','OIL','PIBFR','PROD',
'REV','SYN','UK','US','ZE'),
selected = 'AL'),
#mainPanel("var")
)
))
runApp()
runApp()
runApp()
